#
# wm independent hotkeys
#

# terminal emulator
super + Return
	urxvtc

# terminal emulator floating
super + alt + Return
	urxvtc;\
	bspc node -t "floating"

# terminal emulator tabbed
super + ctrl + Return
	urxvtc -pe tabbed

# program launcher
super + @space
	rofi -modi "drun" -threads 0 -show drun

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

## input from clipboard
super + alt + v
	rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}' ; sh -c 'xdotool type "$(xclip -o -selection clipboard)"'

### Pulse Audio controls

#increase sound volume
XF86AudioRaiseVolume 
	 pactl set-sink-volume 0 +5%  
#decrease sound volume
XF86AudioLowerVolume 
	 pactl set-sink-volume 0 -5% 
# mute sound
XF86AudioMute 
	 pactl set-sink-mute 0 toggle  

### Sreen brightness controls

# increase screen brightness
XF86MonBrightnessUp 
	light -A 5  
# decrease screen brightness
XF86MonBrightnessDown 
	light -U 5 

# Media player controls
XF86AudioPlay 
	 playerctl play-pause || mocp -G
XF86AudioNext 
	 playerctl next || mocp -f
XF86AudioPrev 
	 playerctl previous || mocp -r 


# screenshot
Print
	maim ~/Pictures/Screenshots/$(date +%Y-%m-%d_%H:%M:%S).png;notify-send "Screenshot saved"

super + Print
	maim -i $(xdotool getactivewindow) ~/Pictures/Screenshots/$(date +%Y-%m-%d_%H:%M:%S).png;notify-send "Screenshot saved"

ctrl + Print
	maim -s | convert - \( +clone -background black -shadow 80x5+10+10 \) +swap -background none -layers merge +repage ~/Pictures/Screenshots/$(date +%Y-%m-%d_%H:%M:%S).png ;notify-send "Screenshot saved"

alt + Print
	maim -s | xclip -selection clipboard -t image/png
## toggle pointer allow focus
super + alt + p
	sh .config/scripts/toggleptrfocus.sh

## turn on vim speed mode (on by default when starting x)
super + alt + 0
	xmodmap ~/.config/scripts/speedswapperon

## turn off vim speed mode
super + alt + 9
	xmodmap ~/.config/scripts/speedswapperoff

## cheatsheet 
super + alt + c
	urxvtc -e cht.sh --shell;\
	bspc node -t "floating"

## lock the screen
super + alt + BackSpace
	betterlockscreen -l dimblur

## launch firefox
super + alt + f
	firefox

## open iwctl
super + alt + n
	urxvtc -e iwctl;\
	bspc node -t "floating"

## reload iwd.service
super + alt + shift + n
	urxvtc -e sudo systemctl restart iwd.service;\
	bspc node -t "floating"

## open ncpamixer
super + alt + b
	urxvtc -e ncpamixer;\
	bspc node -t "floating"

## google play music
super + alt + g
	urxvtc -e gpymusic;\
	bspc node -t "floating"

## mocp
super + alt + m
	urxvtc -e mocp;\
	bspc node -t "floating"

## ranger file manager
super + alt + e
	urxvtc -e ranger;\
	bspc node -t "floating"

## rtv
super + alt + r
	urxvtc -e rtv;\
	bspc node -t "floating"

## update system
super + alt + u
	urxvtc -e aurman -Syu;\
	bspc node -t "floating"

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# focus or send to the given desktop (using keypad keys)
super + {_,shift + }KP_{End,Down,Next,Left,Begin,Right,Home,Up,Prior}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


## add window to scrachpad
super + a
	id=$(bspc query -N -n "focused");\
	if [ -n "$id" ];then \
		xprop -id $id -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
		bspc node -t "floating";\
		xdotool windowunmap $id;\
	fi

## open/switch scrachpad windows
super + shift + a
	i=$(bspc query -N -n "focused.floating");\
	if [ -n "$i" ];then \
		xprop -id $i -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
		xdotool windowunmap $i;\
	else;\
		i=$(for w in $(xwininfo -root -children | grep -e "^\s*0x[0-9a-f]\+" -o);do \
			t=$(xprop -id $w _SCRATCH | grep ' = \(.*\)');\
			if [ -n "$t" ];then \
				echo $t $w;\
			fi;\
		done|sort -n|head -n1|cut -d" " -f 5);\
		if [ -n "$i" ];then \
			xprop -id $i -remove _SCRATCH;\
			bspc rule -a \* state=floating center=on --one-shot;\
			xdotool windowmap $i;\
			bspc node -f $i;\
		fi;\
	fi

## position floating windows around
alt + KP_{End,Down,Next,Left,Begin,Right,Home,Up,Prior}
	~/.config/scripts/place_floating_window.sh {1-9}

